{"version":3,"sources":["redux/client/Client.action.js","component/add/AddUserComponent.js","component/header/HeaderComponent.js","component/menu/MenuComponent.js","component/client/delete/DeleteClientComponent.js","component/client/update/UpdateClientComponent.js","component/table/UpdateAndDeleteComponent.js","component/table/TableComponent.js","redux/client/Client.reducer.js","saga/Reducer.js","redux/client/Client.saga.js","saga/Saga.js","saga/createStore.js","component/client/create/CreateClientComponent.js","App.js","index.js"],"names":["Types","getClientRequest","type","getClientDefault","createClientDefault","updateClientDefault","mapDispatchToProps","connect","state","create","createClient","createClientActive","update","updateClient","updateClientActive","props","useState","text","setText","className","onClick","e","Header","name","Sider","Layout","MenuComponent","collapse","setCollapse","theme","reverseArrow","collapsible","collapsed","onCollapse","deleteClientRequest","body","title","onConfirm","confirm","okText","cancelText","href","layout","labelCol","span","wrapperCol","validateMessages","required","updateClientRequest","age","address","phone","dob","isModalVisible","setIsModalVisible","Form","useForm","form","isLoading","setIsLoading","footer","visible","onCancel","onFinish","initialValues","client","String","format","resetFields","Item","label","initialValue","rules","disabled","TextArea","submit","loading","size","columns","dataIndex","key","render","slice","data","getClient","getClientResults","error","getClientError","getClientLoading","useEffect","rowKey","dataSource","Clients","initialStateForGet","active","initialStateForCreate","createClientResults","createClientError","createClientLoading","initialStateForUpdate","updateClientResults","updateClientError","updateClientLoading","combineReducers","action","err","CreateClientSaga","GetClientSaga","UpdateClientSaga","deleteClient","DeleteClientSaga","CREATE_CLIENT","gql","createClientApi","parms","console","log","axios","post","query","print","variables","headers","call","result","errors","put","takeEvery","actions","GET_CLIENT","getClientApi","UPDATE_CLIENT","updateClientApi","DELETE_CLIENT","deleteClientApi","Saga","all","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Reducer","applyMiddleware","logger","run","createClientRequest","style","display","textAlign","marginTop","values","help","Content","Footer","defaults","baseURL","App","minHeight","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78a06d20.chunk.js","sourcesContent":["\r\nexport const Types = {\r\n\r\n    GET_CLIENT_REQUEST: 'GET_CLIENT_REQUEST',\r\n    GET_CLIENT_SUCCESS: 'GET_CLIENT_SUCCESS',\r\n    GET_CLIENT_ERROR:'GET_CLIENT_ERROR',\r\n    GET_CLIENT_DEFAULT:'GET_CLIENT_DEFAULT',\r\n\r\n    CREATE_CLIENT_REQUEST: 'CREATE_CLIENT_REQUEST',\r\n    CREATE_CLIENT_SUCCESS: 'CREATE_CLIENT_SUCCESS',\r\n    CREATE_CLIENT_ERROR:'CREATE_CLIENT_ERROR',\r\n    CREATE_CLIENT_DEFAULT:'CREATE_CLIENT_DEFAULT',\r\n\r\n    UPDATE_CLIENT_REQUEST: 'UPDATE_CLIENT_REQUEST',\r\n    UPDATE_CLIENT_SUCCESS: 'UPDATE_CLIENT_SUCCESS',\r\n    UPDATE_CLIENT_ERROR:'UPDATE_CLIENT_ERROR',\r\n    UPDATE_CLIENT_DEFAULT:'UPDATE_CLIENT_DEFAULT',\r\n\r\n    DELETE_CLIENT_REQUEST: 'DELETE_CLIENT_REQUEST',\r\n    DELETE_CLIENT_SUCCESS: 'DELETE_CLIENT_SUCCESS',\r\n    DELETE_CLIENT_ERROR:'DELETE_CLIENT_ERROR',\r\n    DELETE_CLIENT_DEFAULT:'DELETE_CLIENT_DEFAULT',\r\n  };\r\n\r\n  // GET\r\n\r\n\r\n  export const getClientRequest = () => ({\r\n    type: Types.GET_CLIENT_REQUEST,\r\n  })\r\n\r\n  export const getClientDefault = () => ({\r\n    type:Types.GET_CLIENT_DEFAULT\r\n  })\r\n\r\n  export const getClientSuccess = data => ({\r\n    type: Types.GET_CLIENT_SUCCESS,\r\n    data \r\n  })\r\n\r\n  export const getClientError = err => ({\r\n      type:Types.GET_CLIENT_ERROR,\r\n      err\r\n  })\r\n\r\n\r\n\r\n  //CREATE\r\n  \r\n  export const createClientRequest = body => ({\r\n    type: Types.CREATE_CLIENT_REQUEST,\r\n    body\r\n  })\r\n\r\n  export const createClientDefault = () => ({\r\n    type:Types.CREATE_CLIENT_DEFAULT,\r\n  })\r\n\r\n  export const createClientSuccess = data => ({\r\n    type: Types.CREATE_CLIENT_SUCCESS,\r\n    data \r\n  })\r\n\r\n  export const createClientError = err => ({\r\n      type:Types.CREATE_CLIENT_ERROR,\r\n      err\r\n  })\r\n\r\n  \r\n\r\n  //UPDATE\r\n\r\n\r\n  export const updateClientRequest = body => ({\r\n    type: Types.UPDATE_CLIENT_REQUEST,\r\n    body\r\n  })\r\n\r\n  export const updateClientDefault = () => ({\r\n    type:Types.UPDATE_CLIENT_DEFAULT\r\n  })\r\n\r\n  export const updateClientSuccess = data => ({\r\n    type: Types.UPDATE_CLIENT_SUCCESS,\r\n    data \r\n  })\r\n\r\n  export const updateClientError = err => ({\r\n      type:Types.UPDATE_CLIENT_ERROR,\r\n      err\r\n  })\r\n\r\n// DELETE\r\n\r\nexport const deleteClientRequest = body => ({\r\n    type: Types.DELETE_CLIENT_REQUEST,\r\n    body\r\n  })\r\n\r\n  export const deleteClientDefault = () => ({\r\n    type:Types.DELETE_CLIENT_DEFAULT\r\n  })\r\n\r\n  export const deleteClientSuccess = data => ({\r\n    type: Types.DELETE_CLIENT_SUCCESS,\r\n    data \r\n  })\r\n\r\n  export const deleteClientError = err => ({\r\n      type:Types.DELETE_CLIENT_ERROR,\r\n      err\r\n  })","import { Button } from \"antd\"\r\nimport { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createClientDefault , updateClientDefault} from \"../../redux/client/Client.action\"\r\n\r\n\r\nconst AddUser = (props) => {\r\n\r\n    const [ text , setText ] = useState('ADD USER')\r\n\r\n    const click = () => {\r\n        text === 'CLEAR' ? setText('ADD USER') : setText(\"CLEAR\")\r\n        props.createClientDefault();\r\n        \r\n    }\r\n    return (\r\n        <div className=\"add-user\">\r\n            <Button type=\"primary\" onClick={(e) => click(e)}> {text} </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createClientDefault,\r\n    updateClientDefault\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      create:state.createClient.createClientActive,\r\n      update:state.updateClient.updateClientActive,\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);\r\n","import AddUser from '../add/AddUserComponent';\r\nimport './HeaderComponent.scss'\r\nconst Header = ( { name } ) => {\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className='h-container'>\r\n                <h1>Dashboard</h1>\r\n                <AddUser/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Layout } from 'antd';\r\nimport { useState } from 'react';\r\nimport './MenuComponent.scss'\r\nconst { Sider } = Layout;\r\n\r\n\r\nconst MenuComponent = () => {\r\n\r\n    const [ collapse , setCollapse ] = useState(false)\r\n\r\n    return (\r\n        <Sider\r\n            className=\"menu\"\r\n            theme=\"dark\"\r\n            reverseArrow={true}\r\n            collapsible \r\n            collapsed={collapse}\r\n            onCollapse={() => setCollapse(!collapse)}\r\n        >\r\n        <div className='menu-title'>\r\n            <h1> Menu  </h1>\r\n        </div>\r\n        </Sider>\r\n    )\r\n}\r\n\r\nexport default MenuComponent;","import './DeleteClientComponent.scss'\r\nimport { connect } from 'react-redux'\r\nimport { deleteClientDefault, deleteClientRequest, getClientRequest } from '../../../redux/client/Client.action';\r\n\r\n\r\nimport { Popconfirm, message } from 'antd';\r\n\r\nconst DeleteClient = (props) => {\r\n\r\n    let { name, deleteClientRequest, getClientRequest } = props;\r\n\r\n    const confirm = (name) => {\r\n        const body = {\r\n            name:name\r\n        }\r\n        deleteClientRequest(body)\r\n        getClientRequest()\r\n    }\r\n\r\n    return (\r\n        <Popconfirm\r\n            title=\"Are you sure to delete this user?\"\r\n            onConfirm={() => confirm(name)}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n        >\r\n            <a href=\"#\">Delete</a>\r\n        </Popconfirm>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  getClientRequest,\r\n  deleteClientRequest\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(DeleteClient);\r\n\r\n","// import { useEffect, useState } from 'react';\r\n// import { connect } from 'react-redux'\r\n// import { updateClientDefault, updateClientRequest } from '../../../redux/client/Client.action';\r\n\r\n\r\n\r\n// const UpdateClient = (props) => {\r\n\r\n//   let client = null;\r\n//   let user;\r\n//   let name = localStorage.getItem('name')\r\n//   let { updateClientRequest, updateClientDefault, error , data , active , users } = props;\r\n\r\n\r\n//   useEffect(()=>{\r\n//     if(props.users){\r\n//       if(users.length > 0){\r\n//         user = users.filter(user => user.name === name )[0]\r\n//         console.log(user)\r\n//       }\r\n//     }\r\n//   },[])\r\n  \r\n\r\n\r\n\r\n//   const onFinish = (initialValues) => {\r\n//     var formatDate = \"DD.MM.YYYY\";\r\n//     let client = initialValues.client\r\n//       let body = { \r\n//         name: client.name,\r\n//         age:String(client.age),\r\n//         address:client.address,\r\n//         dob:client.dob.format(formatDate),\r\n//         phone:client.phone\r\n//       } \r\n//     updateClientRequest(body)\r\n//     setIsLoading(true)\r\n//     form.resetFields();\r\n//   };\r\n\r\n//     return (\r\n//       <div className=\"content-section\" style={{ display: active ? '' : 'none' }}>\r\n//         <h1 style={{ textAlign: 'center', marginTop: '1rem' }}> UPDATE USER </h1>\r\n//         <Form form={form} name=\"control-hooks\" {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={onFinish}>\r\n//           <Form.Item\r\n//             name={['client', 'name']}\r\n//             label=\"Name\"\r\n//             initialValue={localStorage.getItem('name')}\r\n//             rules={[\r\n//               {\r\n//                 required: true,\r\n//               },\r\n//             ]}\r\n//           >\r\n//             <Input />\r\n//           </Form.Item>\r\n//           <Form.Item\r\n//             name={['client', 'age']}\r\n//             label=\"Age\"\r\n//             initialValue={user ? user.age : null}\r\n//             rules={[\r\n//               {\r\n//                 required: true,\r\n//               },\r\n//             ]}\r\n//           >\r\n//             <InputNumber />\r\n//           </Form.Item>\r\n//           <Form.Item\r\n//             name={['client', 'phone']}\r\n//             label=\"Phone\"\r\n//             initialValue={user ? user.phone : null}\r\n\r\n//           >\r\n//             <Input />\r\n//           </Form.Item>\r\n//           <Form.Item name={['client', 'address']}\r\n//             label=\"Address\"\r\n//             initialValue={user ? user.address : null}\r\n//           >\r\n//             <Input.TextArea />\r\n//           </Form.Item>\r\n//           <Form.Item name={['client', 'dob']}\r\n//             label=\"Date of Birth\"\r\n//             initialValue={user ? user.dob : null}\r\n//           >\r\n//             <DatePicker />\r\n//           </Form.Item>\r\n//         </Form>\r\n//         <div className=\"updateClient-footer\">\r\n//           <Button onClick={onSubmit} loading={isLoading} type=\"primary\">Submit</Button>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Form, Modal, Input, InputNumber, DatePicker, Button} from 'antd';\r\nimport './UpdateClientComponent.scss'\r\nimport { getClientDefault, updateClientRequest } from '../../../redux/client/Client.action';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span:10,\r\n    },\r\n    wrapperCol: {\r\n      span: 20,\r\n    },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n}\r\n\r\n\r\nconst UpdateClient = ({ name, age , address, phone ,dob , updateClientRequest }) => {\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const[ isLoading ,setIsLoading ] = useState(false);\r\n\r\n  \r\n  const onSubmit = (initialValues) => {\r\n    setIsLoading(true)\r\n    form.submit();\r\n  }\r\n\r\n  const onFinish = (initialValues) => {\r\n\r\n    var formatDate = \"DD.MM.YYYY\";\r\n    let client = initialValues.client\r\n      let body = { \r\n        name: client.name,\r\n        age:String(client.age),\r\n        address:client.address,\r\n        dob:client.dob.format(formatDate),\r\n        phone:client.phone\r\n      } \r\n    updateClientRequest(body)\r\n    getClientDefault()\r\n    setIsLoading(false)\r\n    form.resetFields();\r\n    setIsModalVisible(false)\r\n  };\r\n\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"secondary\" onClick={showModal}>\r\n        Edit\r\n      </Button>\r\n      <Modal footer={[]} title=\"Edit Details\" visible={isModalVisible} onCancel={handleCancel}>\r\n         <Form form={form} name=\"control-hooks\" {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={onFinish}>\r\n          <Form.Item\r\n            name={['client', 'name']}\r\n            label=\"Name\"\r\n            initialValue={name}\r\n            \r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={['client', 'age']}\r\n            label=\"Age\"\r\n            initialValue={age}\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={['client', 'phone']}\r\n            label=\"Phone\"\r\n            initialValue={phone}\r\n\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={['client', 'address']}\r\n            label=\"Address\"\r\n            initialValue={address}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n          <Form.Item name={['client', 'dob']}\r\n            label=\"Date of Birth\"\r\n            initialValue={null}\r\n          >\r\n            <DatePicker />\r\n          </Form.Item>\r\n        </Form>\r\n        <div className=\"updateClient-footer\">\r\n          <Button onClick={onSubmit} loading={isLoading} type=\"primary\">Submit</Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  updateClientRequest,\r\n  getClientDefault\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(UpdateClient);\r\n\r\n","import { Table, Tag, Space } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { createClientDefault, updateClientDefault } from '../../redux/client/Client.action';\r\nimport DeleteClient from '../client/delete/DeleteClientComponent';\r\nimport UpdateClient from '../client/update/UpdateClientComponent';\r\n\r\nconst UpdateAndDelete = (props) => {\r\n\r\n\r\n    return (\r\n      <Space size=\"middle\">\r\n        <UpdateClient {...props}/>\r\n        <DeleteClient name={props.name}/>\r\n      </Space>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createClientDefault,\r\n    updateClientDefault,\r\n    \r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      create:state.createClient.createClientActive,\r\n      update:state.updateClient.updateClientActive,\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateAndDelete);\r\n  ","import { Table, Tag, Space } from 'antd';\r\nimport { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { getClientDefault, getClientRequest } from '../../redux/client/Client.action';\r\nimport './TableComponent.scss'\r\nimport UpdateAndDelete from './UpdateAndDeleteComponent';\r\n\r\n\r\nconst columns = [\r\n   {\r\n    title: 'ID',\r\n    dataIndex:'_id',\r\n    key:'_id',\r\n    render: text => <span>{text.slice(0,5)}</span>\r\n\r\n   },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: text =><span>{text}</span>\r\n  },\r\n  {\r\n    title: 'Age',\r\n    dataIndex:'age',\r\n    key:'age'\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Date of Birth',\r\n    dataIndex: 'dob',\r\n    key: 'dob',\r\n  },\r\n  {\r\n    title: 'Phone',\r\n    dataIndex: 'phone',\r\n    key: 'phone',\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    render: (text, client) => (\r\n      <UpdateAndDelete {...client}/>\r\n    ),\r\n  },\r\n];\r\n\r\n\r\n\r\n\r\nconst TableComponent = (props) => {\r\n\r\n\r\n    let { getClientRequest, getClientDefault , data ,error , loading } = props\r\n\r\n    useEffect(() => {\r\n        getClientRequest();\r\n    },[loading])\r\n\r\n    return (\r\n            <Table className=\"table\" rowKey={(client) => client.name} columns={columns}   dataSource={data ? data.Clients: null} />)\r\n    }\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.getClient.getClientResults,\r\n    error: state.getClient.getClientError,\r\n    loading: state.getClient.getClientLoading\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  getClientRequest,\r\n  getClientDefault,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableComponent);\r\n    \r\n","import { Types } from './Client.action';\r\n\r\n\r\n\r\nconst initialStateForGet = {\r\n    getClientResults:[],\r\n    getClientError:[],\r\n    getClientLoading:true,\r\n    active:false\r\n};\r\n\r\n const getClientReducer = (state = initialStateForGet, action) => {\r\n    switch (action.type) {\r\n      case Types.GET_CLIENT_SUCCESS:\r\n        return {\r\n          getClientResults: action.data,\r\n          getClientLoading:false,\r\n          active:true\r\n  \r\n      };\r\n      case Types.GET_CLIENT_ERROR:\r\n          return {\r\n          getClientError:action.err,\r\n          getClientLoading:false\r\n      };\r\n      case Types.GET_CLIENT_DEFAULT:\r\n        return state\r\n        \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nconst initialStateForCreate = {\r\n  createClientResults:[],\r\n  createClientError:[],\r\n  createClientLoading:true,\r\n  createClientActive:false,\r\n};\r\n\r\nconst createClientReducer = (state = initialStateForCreate, action) => {\r\n  switch (action.type) {\r\n    case Types.CREATE_CLIENT_SUCCESS:\r\n      return {\r\n        createClientResults: action.data,\r\n        createClientLoading:false\r\n\r\n    };\r\n    case Types.CREATE_CLIENT_ERROR:\r\n        return {\r\n        createClientError:action.err,\r\n        createClientLoading:false\r\n    };\r\n    case Types.CREATE_CLIENT_DEFAULT:\r\n        return {\r\n            createClientActive:!state.createClientActive,\r\n        }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateForUpdate = {\r\n    updateClientResults:[],\r\n    updateClientError:[],\r\n    updateClientLoading:true,\r\n    updateClientActive:false,\r\n\r\n  };\r\n  \r\n const updateClientReducer = (state = initialStateForUpdate, action) => {\r\n    switch (action.type) {\r\n      case Types.UPDATE_CLIENT_SUCCESS:\r\n        return {\r\n          updateClientResults: action.data,\r\n          updateClientLoading:false\r\n  \r\n      };\r\n      case Types.UPDATE_CLIENT_ERROR:\r\n          return {\r\n          updateClientError:action.err,\r\n          updateClientLoading:false\r\n      };\r\n      case Types.UPDATE_CLIENT_DEFAULT:\r\n        return {\r\n            updateClientActive:!state.updateClientActive\r\n        }\r\n        \r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nconst initialStateForDelete = {\r\n  deleteClientResults:[],\r\n  deleteClientError:[],\r\n  deleteClientLoading:true\r\n};\r\n\r\n const deleteClientReducer = (state = initialStateForDelete, action) => {\r\n  switch (action.type) {\r\n    case Types.DELETE_CLIENT_SUCCESS:\r\n      return {\r\n        deleteClientResults: action.data,\r\n        deleteClientLoading:false\r\n\r\n    };\r\n    case Types.DELETE_CLIENT_ERROR:\r\n        return {\r\n        deleteClientError:action.err,\r\n        deleteClientLoading:false\r\n    };\r\n    case Types.DELETE_CLIENT_DEFAULT:\r\n      return state\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport {\r\n    createClientReducer,\r\n    updateClientReducer,\r\n    deleteClientReducer,\r\n    getClientReducer\r\n}","import { combineReducers } from 'redux';\r\nimport { createClientReducer, getClientReducer, updateClientReducer } from '../redux/client/Client.reducer';\r\n\r\nexport default combineReducers({\r\n    createClient:createClientReducer,\r\n    getClient:getClientReducer,\r\n    updateClient:updateClientReducer,\r\n\r\n});","import { takeEvery, call, put, fork } from 'redux-saga/effects';\r\nimport * as actions from './Client.action';\r\nimport axios from 'axios'\r\nimport { gql } from '@apollo/client';\r\nimport { print } from 'graphql/language/printer';\r\n\r\n\r\nconst CREATE_CLIENT = gql` \r\nmutation createClient($name:String! $age:String! $address:String $dob:String $phone:String) {\r\n    createClient(name:$name age:$age address:$address dob:$dob phone:$phone){\r\n     _id\r\n     name\r\n     address\r\n     dob\r\n     phone\r\n  }\r\n}`\r\n\r\nconst createClientApi = (parms) => {\r\n    console.log(parms)\r\n    return axios.post('/', {\r\n        query:print(CREATE_CLIENT),\r\n        variables: {\r\n            name:parms.name,\r\n            age:parms.age,\r\n            address:parms.address ? parms.address : null,\r\n            dob:parms.dob ? parms.dob : null,\r\n            phone:parms.phone ? parms.phone: null\r\n        },\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n\r\n        }\r\n    });\r\n};\r\n\r\nfunction* createClient(body) {\r\n    try {\r\n      const result = yield call(createClientApi,body.body);\r\n      if(result.data.errors) throw result.data.errors\r\n      yield put(actions.createClientSuccess(result.data.data));\r\n    } catch (error) {\r\n      yield put(actions.createClientError(error))\r\n    }\r\n  }\r\n  \r\n  function* CreateClientSaga() {\r\n    yield takeEvery(actions.Types.CREATE_CLIENT_REQUEST, createClient);\r\n}\r\n\r\n\r\n\r\nconst GET_CLIENT = gql`\r\n{  Clients {\r\n    _id\r\n    name\r\n    age\r\n    address\r\n    dob\r\n    phone\r\n  }\r\n}`\r\n\r\nconst getClientApi = () => {\r\n    return axios.post('/', {\r\n        query:print(GET_CLIENT),\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n\r\n        }\r\n    });\r\n};\r\n\r\nfunction* getClient() {\r\n    try {\r\n      const result = yield call(getClientApi);\r\n      if(result.data.errors) throw result.data.errors\r\n      yield put(actions.getClientSuccess(result.data.data));\r\n    } catch (error) {\r\n      yield put(actions.getClientError(error))\r\n    }\r\n  }\r\n  \r\n  function* GetClientSaga() {\r\n    yield takeEvery(actions.Types.GET_CLIENT_REQUEST, getClient);\r\n}\r\n\r\n\r\n\r\n\r\nconst UPDATE_CLIENT = gql` \r\nmutation updateClient($name:String! $age:String! $address:String $dob:String $phone:String) {\r\n    updateClient(name:$name age:$age address:$address dob:$dob phone:$phone){\r\n     _id\r\n     name\r\n     age\r\n     address\r\n     dob\r\n     phone\r\n  }\r\n}`\r\n\r\nconst updateClientApi = (parms) => {\r\n    return axios.post('/', {\r\n        query:print(UPDATE_CLIENT),\r\n        variables: {\r\n            name:parms.name,\r\n            age:parms.age,\r\n            address:parms.address ? parms.address : null,\r\n            dob:parms.dob ? parms.dob : null,\r\n            phone:parms.phone ? parms.phone: null\r\n        },\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n\r\n        }\r\n    });\r\n};\r\n\r\nfunction* updateClient(body) {\r\n    try {\r\n      const result = yield call(updateClientApi,body.body);\r\n      if(result.data.errors) throw result.data.errors\r\n      yield put(actions.updateClientSuccess(result.data.data));\r\n    } catch (error) {\r\n      yield put(actions.updateClientError(error))\r\n    }\r\n  }\r\n  \r\n  function* UpdateClientSaga() {\r\n    yield takeEvery(actions.Types.UPDATE_CLIENT_REQUEST, updateClient);\r\n}\r\n\r\n\r\nconst DELETE_CLIENT = gql` \r\nmutation deleteClient($name:String!) {\r\n    deleteClient(name:$name){\r\n     _id\r\n     name\r\n     address\r\n     dob\r\n     phone\r\n  }\r\n}`\r\n\r\nconst deleteClientApi = (parms) => {\r\n    return axios.post('/', {\r\n        query:print(DELETE_CLIENT),\r\n        variables: {\r\n            name:parms.name,\r\n        },\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n\r\n        }\r\n    });\r\n};\r\n\r\nfunction* deleteClient(body) {\r\n    try {\r\n      const result = yield call(deleteClientApi,body.body);\r\n      if(result.data.errors) throw result.data.errors\r\n      yield put(actions.deleteClientSuccess(result.data.data));\r\n    } catch (error) {\r\n      yield put(actions.deleteClientError(error))\r\n    }\r\n  }\r\n  \r\n  function* DeleteClientSaga() {\r\n    yield takeEvery(actions.Types.DELETE_CLIENT_REQUEST, deleteClient);\r\n}\r\n\r\n\r\nexport {\r\n    GetClientSaga,\r\n    CreateClientSaga,\r\n    UpdateClientSaga,\r\n    DeleteClientSaga\r\n}","import { all, fork } from 'redux-saga/effects';\r\nimport { CreateClientSaga, DeleteClientSaga, GetClientSaga, UpdateClientSaga } from '../redux/client/Client.saga';\r\n\r\n\r\nexport default function* Saga() {\r\n    yield all([\r\n        fork(CreateClientSaga),\r\n        fork(GetClientSaga),\r\n        fork(UpdateClientSaga),\r\n        fork(DeleteClientSaga)\r\n    ])\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport Reducer from './Reducer';\r\nimport Saga from './Saga';\r\nimport logger from 'redux-logger'\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(Reducer, composeEnhancers(applyMiddleware(sagaMiddleware, logger)))\r\n\r\nsagaMiddleware.run(Saga);\r\n\r\nexport default store","import { Form, Input, InputNumber, DatePicker, Button} from 'antd';\r\nimport { useState } from 'react';\r\nimport './CreateClientComponent.scss'\r\nimport { connect } from 'react-redux'\r\nimport { createClientDefault, createClientRequest, getClientDefault, getClientRequest } from '../../../redux/client/Client.action';\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span:10,\r\n    },\r\n    wrapperCol: {\r\n      span: 20,\r\n    },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n}\r\n\r\nconst CreateClient = (props) => {\r\n\r\n  const { createClientRequest, createClientDefault, error , data , active } = props;\r\n\r\n\r\n  const [form] = Form.useForm();\r\n  const[ isLoading ,setIsLoading ] = useState(false);\r\n\r\n  \r\n  const onSubmit = (values) => {\r\n    form.submit();\r\n  }\r\n\r\n\r\n  const onFinish = (values) => {\r\n    var formatDate = \"DD.MM.YYYY\";\r\n    let client = values.client\r\n      let body = { \r\n        name: client.name,\r\n        age:String(client.age),\r\n        address:client.address,\r\n        dob:client.dob.format(formatDate),\r\n        phone:client.phone\r\n      } \r\n    createClientRequest(body)\r\n    getClientRequest()\r\n    setIsLoading(true)\r\n    form.resetFields();\r\n    setIsLoading(false)\r\n\r\n  };\r\n\r\n\r\n    return ( \r\n        <div className=\"content-section\" style={{display: active ? '': 'none'}}>\r\n        <h1 className=\"create\" style={{textAlign:'center',marginTop:'1rem'}} onClick={() => createClientDefault()}> CREATE USER </h1>\r\n        <Form form={form} className=\"create\" name=\"control-hooks\" {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={onFinish}>\r\n        <Form.Item\r\n          name={['client', 'name']}\r\n          label=\"Name\"\r\n          help= \"immutable after creation \"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={['client', 'age']}\r\n          label=\"Age\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n         <InputNumber/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={['client', 'phone']}\r\n          label=\"Phone\"\r\n        >\r\n          <Input/>\r\n        </Form.Item>\r\n        <Form.Item name={['client', 'address']} \r\n        label=\"Address\"\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n        <Form.Item name={['client', 'dob']} \r\n        label=\"Date of Birth\"\r\n        >\r\n          <DatePicker/>\r\n        </Form.Item>\r\n      </Form>\r\n      <div className=\"createClient-footer create\">\r\n        <Button onClick={onSubmit} loading={isLoading} type=\"primary\">Submit</Button>\r\n      </div>\r\n      </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data:state.createClient.createClientResults,\r\n    error:state.createClient.createClientError,\r\n    loading:state.createClient.createClientLoading,\r\n    active:state.createClient.createClientActive\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  createClientRequest,\r\n  createClientDefault,\r\n  getClientRequest\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateClient);\r\n\r\n","import HeaderComponent from './component/header/HeaderComponent'\nimport { Button, Layout } from 'antd';\nimport MenuComponent from './component/menu/MenuComponent';\nimport TableComponent from './component/table/TableComponent';\nimport store from './saga/createStore'\nimport { Provider } from 'react-redux';\nimport CreateClient from './component/client/create/CreateClientComponent';\nimport UpdateClient from './component/client/update/UpdateClientComponent';\nimport axios from 'axios'\nimport AddUser from './component/add/AddUserComponent';\n\n\n\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\naxios.defaults.baseURL = 'https://consign-server.herokuapp.com/'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Layout style={{ minHeight: '100vh' }}>\n        <MenuComponent />\n        <Layout>\n          <Header><HeaderComponent name='dashboard' /></Header>\n          <Content><TableComponent/></Content>\n          <CreateClient/>\n        </Layout>\n      </Layout>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}